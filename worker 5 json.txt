export default { async fetch(request, env, ctx) { const headers = request.headers; const referer = headers.get("referer") || ""; const userAgent = headers.get("user-agent") || ""; const path = new URL(request.url).pathname; const botsAutorises = [ "Googlebot", "Googlebot-Mobile", "Googlebot-Image", "Mediapartners-Google", "AdsBot-Google", "AdsBot-Google-Mobile", "Google Favicon", "Google-Structured-Data-Testing-Tool", "Chrome-Lighthouse", "bingbot", "adidxbot", "bingpreview", "MicrosoftPreview" ]; const autorisé = referer.includes("portail-ferforge.blogspot.com") || botsAutorises.some(bot => userAgent.toLowerCase().includes(bot.toLowerCase())) || userAgent.includes("Structured-Data-Testing-Tool") || userAgent.includes("Google-InspectionTool"); if (!autorisé) { return new Response("404 – Page non trouvée", { status: 404 }); } const routes = { "/schema": "https://raw.githubusercontent.com/portailferforge/structured-json-data/refs/heads/main/schema_portail_fer_forge.jsonld", "/general-ld": "https://raw.githubusercontent.com/portailferforge/structured-json-data/refs/heads/main/portail_fer_forge.jsonld", "/france": "https://raw.githubusercontent.com/portailferforge/structured-json-data/refs/heads/main/portail_fer_forge_france.json", "/aquitaine": "https://raw.githubusercontent.com/portailferforge/structured-json-data/refs/heads/main/portail_fer_forge_aquitaine.json", "/portail-4m": "https://raw.githubusercontent.com/portailferforge/structured-json-data/refs/heads/main/portail_fer_forge-4-m.json" }; // 🔍 Si la racine est demandée, retourner la liste des routes disponibles if (path === "/") { const list = Object.entries(routes) .map(([key, url]) => `<li><code>${key}</code> → <a href="${url}" target="_blank">${url}</a></li>`) .join(""); const html = ` <!DOCTYPE html> <html lang="fr"> <head><meta charset="UTF-8"><title>Liste des fichiers JSON-LD</title></head> <body> <h2>📄 Fichiers JSON-LD disponibles via Worker</h2> <ul>${list}</ul> </body> </html> `; return new Response(html, { headers: { "content-type": "text/html;charset=UTF-8" }, status: 200 }); } const targetUrl = routes[path]; if (!targetUrl) { return new Response("404 – Page non trouvée", { status: 404 }); } return fetch(targetUrl); } }